name: CI

on:
  schedule:
    # Every sunday at 02:00
    - cron: 0 2 * * 0
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    name: Tests PHP ${{ matrix.php }} (Symfony ${{ matrix.symfony }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'
        symfony:
          - '4.4.*'
          - '5.1.*'
        include:
          - php: '7.4'
            symfony: '5.1.*'
            bootable: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: composer:v2, flex
          tools: php-cs-fixer

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Configure Symfony
        run: composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Update project dependencies
        if: matrix.php != '8.0'
        run: composer update --no-progress --ansi --prefer-stable

      - name: Update project dependencies
        if: matrix.php == '8.0'
        run: composer update --no-progress --ansi --prefer-stable --ignore-platform-req=php

      - name: Bundle is bootable
        if: matrix.bootable
        env:
          SKELETON_VERSION: ${{matrix.symfony}}
        run: |
          composer create-project "symfony/skeleton:${SKELETON_VERSION}" flex
          cd flex
          composer config extra.symfony.allow-contrib true
          composer req --ignore-platform-reqs tilleuls/forgot-password-bundle

      - name: Run php-cs-fixer tests
        if: matrix.php != '8.0' && matrix.php != '8.1'
        run: php-cs-fixer fix --diff --dry-run

      - name: Run PHPUnit tests
        run: vendor/bin/simple-phpunit --colors=always --testdox

      - name: Run Behat tests
        run: |
          mkdir -p features/app/cache/test/doctrine/orm/Proxies features/app/logs
          vendor/bin/behat

      - name: Run Behat tests with jms/serializer-bundle
        run: |
          mkdir -p features/app/cache/jmsserializer/doctrine/orm/Proxies features/app/logs
          vendor/bin/behat -p jmsserializer
